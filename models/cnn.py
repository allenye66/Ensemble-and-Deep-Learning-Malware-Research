import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import tensorflow as tf

df = pd.read_csv('/Users/allen/Desktop/Malware-Research/csv/all_data.csv')
X = df.iloc[:, 34:]
Y = df.iloc[:, 1]
X = X/30 #Check if there are 30 different opcodes
X = np.expand_dims(X, 2)
print(X.shape)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
Y = le.fit_transform(Y)

cnn = tf.keras.models.Sequential()

cnn.add(tf.keras.layers.Conv1D(kernel_initializer="glorot_normal", filters=100, kernel_size=2, activation ='relu', input_shape= (1000, 1)))

cnn.add(tf.keras.layers.MaxPool1D(pool_size=2, strides=2))

#cnn.add(tf.keras.layers.Conv1D(filters=32, kernel_size=3, activation='relu'))
#cnn.add(tf.keras.layers.MaxPool1D(pool_size=2, strides=2))
cnn.add(Dropout(0.8))

cnn.add(tf.keras.layers.Flatten())
cnn.add(tf.keras.layers.Dense(units=512))

cnn.add(tf.keras.layers.Dense(units=256, activation='relu'))

cnn.add(tf.keras.layers.Dense(units=128,  kernel_initializer="glorot_normal", activation='relu'))

cnn.add(tf.keras.layers.Dense(units=24, activation='softmax')) 

cnn.compile(optimizer = 'adam', loss = 'sparse_categorical_crossentropy', metrics = ['accuracy'])
history = cnn.fit(X, Y, epochs = 60, validation_split = 0.15, batch_size = 2000) 


plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('model accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'val'], loc='upper left')
plt.show()