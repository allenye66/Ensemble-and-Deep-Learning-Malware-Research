import pandas as pd
import numpy as np
import sklearn.metrics as metrics
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from sklearn.utils.multiclass import unique_labels

df = pd.read_csv('/Users/allen/Desktop/Malware-Research/csv/all_data.csv')


df = df.loc[:, df.columns != 'Total Opcodes']

for i in range(31):
    df = df.drop(df.columns[1], axis=1)



opcode_sequence = (df.drop(df.columns[0], axis=1))
opcode_sequence = np.asarray(opcode_sequence)


labels = np.asarray(df[['Family']].copy())



X_train, X_test, y_train, y_test = train_test_split(opcode_sequence, labels, test_size=0.20, random_state=42)




from sklearn.neighbors import KNeighborsClassifier

#knn = KNeighborsClassifier(n_neighbors=11)
arr = []
for i in range(15):
	arr.append(i+1)
for i in arr: 
	knn = KNeighborsClassifier(n_neighbors=i)
	knn.fit(X_train,y_train)
	preds = knn.predict(X_test)
	accuracy = metrics.accuracy_score(y_test, preds)
	print(i, ":",accuracy)

##RESULTS
'''
1 : 0.6981818181818182

2 : 0.6636363636363637

3 : 0.6545454545454545

4 : 0.6363636363636364

5 : 0.6218181818181818

6 : 0.6004545454545455

7 : 0.5827272727272728

8 : 0.5627272727272727

9 : 0.5468181818181819

10 : 0.5409090909090909

11 : 0.5354545454545454

12 : 0.5254545454545455

13 : 0.5172727272727272

14 : 0.5077272727272727

15: 0.5036363636363637


'''

