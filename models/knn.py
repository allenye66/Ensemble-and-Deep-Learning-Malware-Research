import pandas as pd
import numpy as np
import sklearn.metrics as metrics
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from sklearn.utils.multiclass import unique_labels

df = pd.read_csv('/Users/allen/Desktop/Malware-Research/csv/all_data.csv')

df.Family = df.Family.replace({"ADLOAD": 0})
df.Family = df.Family.replace({"AGENT": 1})
df.Family = df.Family.replace({"ALLAPLE_A": 2})
df.Family = df.Family.replace({"BHO": 3})
df.Family = df.Family.replace({"BIFROSE": 4})
df.Family = df.Family.replace({"CEEINJECT": 5})
df.Family = df.Family.replace({"CYCBOT_G": 6})
df.Family = df.Family.replace({"FAKEREAN": 7})
df.Family = df.Family.replace({"HOTBAR": 8})
df.Family = df.Family.replace({"INJECTOR": 9})

df.Family = df.Family.replace({"LOLYDA_BF": 10})
df.Family = df.Family.replace({"ONLINEGAMES": 11})
df.Family = df.Family.replace({"RENOS": 12})
df.Family = df.Family.replace({"RIMECUD_A": 13})
df.Family = df.Family.replace({"SMALL": 14})
df.Family = df.Family.replace({"STARTPAGE": 15})
df.Family = df.Family.replace({"TOGA_RFN": 16})
df.Family = df.Family.replace({"VB": 17})
df.Family = df.Family.replace({"VBINJECT": 18})
df.Family = df.Family.replace({"VOBFUS": 19})

df.Family = df.Family.replace({"VUNDO": 20})
df.Family = df.Family.replace({"WINTRIM_BX": 21})
df.Family = df.Family.replace({"WINWEBSEC": 22})
df.Family = df.Family.replace({"ZBOT": 23})

df = df.loc[:, df.columns != 'Total Opcodes']
df = df.loc[:, df.columns != 'File Name']

for i in range(31):
    df = df.drop(df.columns[1], axis=1)



opcode_sequence = (df.drop(df.columns[0], axis=1))
opcode_sequence = np.asarray(opcode_sequence)


labels = np.asarray(df[['Family']].copy())



X_train, X_test, y_train, y_test = train_test_split(opcode_sequence, labels, test_size=0.15, random_state=42)




from sklearn.neighbors import KNeighborsClassifier

#knn = KNeighborsClassifier(n_neighbors=11)
arr = []
for i in range(24):
	arr.append(i+1)
for i in arr: 
	knn = KNeighborsClassifier(n_neighbors=i)
	knn.fit(X_train,y_train)
	preds = knn.predict(X_test)
	accuracy = metrics.accuracy_score(y_test, preds)
	print(i, ":",accuracy)

##RESULTS
'''
1 : 0.2827400940228341

2 : 0.21356615177971794

3 : 0.22095366017461385

4 : 0.19274680993955676

5 : 0.2008059100067159

6 : 0.2102081934184016

7 : 0.2256548018804567

8 : 0.23304231027535258

9 : 0.24042981867024849

10 : 0.24042981867024849

11 : 0.2384150436534587

12 : 0.23237071860308933

13 : 0.22834116856950973

14 : 0.22296843519140364

15 : 0.2196104768300873

16 : 0.2196104768300873

17 : 0.2216252518468771

18 : 0.21893888515782403

19 : 0.21423774345198118

20 : 0.21423774345198118

21 : 0.2122229684351914

22 : 0.21289456010745467

23 : 0.20953660174613833

24 : 0.2102081934184016
'''
